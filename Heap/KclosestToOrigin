class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {
        
        
        vector<vector<int>> v;
        priority_queue<pair<int,int>> pq;
        
        for(int i = 0; i < points.size(); i++){
            int dist = points[i][0]*points[i][0] + points[i][1]*points[i][1];
            pq.push({dist,i});
            if(pq.size() > K)
                pq.pop();
        }
        
        while(!pq.empty()){
            vector<int> temp;
            temp.push_back(points[pq.top().second][0]);
            temp.push_back(points[pq.top().second][1]);
            
            v.push_back(temp);
            pq.pop();
        }
        
        return v;
    }
};
