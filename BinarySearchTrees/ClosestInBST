void minDiffUtil(Node *root, int K, int &ans, int &diff){
    if(root == NULL)
        return;
    
    if(root->data == K){
        ans = root->data;
        return;
    }
    
    if(diff > abs(root->data - K)){
        diff = abs(root->data - K);
        ans = root->data;
    }
    
    if(K < root->data)
        minDiffUtil(root->left,K,ans,diff);
    else
        minDiffUtil(root->right,K,ans,diff);
}

// Return the minimum absolute difference between any tree node and the integer K
int minDiff(Node *root, int K)
{
    //Your code here
    if(root == NULL)
        return -1;
        
    int diff = INT_MAX;
    int ans = -1;
    
    minDiffUtil(root,K,ans,diff);
    
    return abs(ans - K);
}
