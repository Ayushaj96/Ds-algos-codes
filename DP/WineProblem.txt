
#include <iostream>
#include <cstring>
#include <iomanip>
using namespace std;

//memoization
int memo[100][100];
int maxprofit(int *arr,int s,int e,int year){
    
        if(s>e){
            return 0;
        }

        if(memo[s][e]!=-1) return memo[s][e];

        int ans1 = arr[s] * year + maxprofit(arr,s+1,e,year+1);
        int ans2 = arr[e] * year + maxprofit(arr,s,e-1,year+1);
        memo[s][e] = max(ans1,ans2); 
        return memo[s][e];
}

//bottom-up
int maxprofitdp(int *arr,int n){
       int dp[100][100]={};
       int year=n;

       for(int i=0;i<n;i++){
           dp[i][i] = arr[i] * year;
       }
       year--;

       for(int len=2;len<=n;len++){
           int srt = 0;
           int end = n-len;
           while(srt <= end){
              int endwindow = srt+len-1;
              dp[srt][endwindow] = max (arr[srt]* year + dp[srt+1][endwindow], arr[endwindow]*year + dp[srt][endwindow-1]);
              srt++;
           }
           year--;
       }

       for(int i=0;i<n;i++){
           for(int j=0;j<n;j++){
               cout<<setw(3)<<dp[i][j]<<" ";
           }
           cout<<endl;
       }
       return dp[0][n-1];
}

int main() {
    int n;
    cin>>n;
    int a[n];

    memset(memo,-1,sizeof(memo));
    for(int i=0;i<n;i++){
        cin>>a[i];
    }

   //memoization
    cout<<"MEMOIZATION"<<endl;
    int ans = maxprofit(a,0,n-1,1);
    cout<<"max profit : "<<ans<<endl;
  
    //bottom-up
    cout<<"BOTTOM UP"<<endl;
    int ans2=maxprofitdp(a,n);
    cout<<"max profit : "<<ans2;
}