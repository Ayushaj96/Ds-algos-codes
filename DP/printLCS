#include <iostream>
#include <cstring>
#include <vector>
using namespace std;

void LCStabulation(string str1, string str2){
    int n = str1.length();
    int m = str2.length();
    
    int dp[n+1][m+1];
    memset(dp,0,sizeof(dp));
    
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            if(str1[i-1] == str2[j-1])
                dp[i][j] = 1 + dp[i-1][j-1];
            else
                dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
        }
    }
    
    int index = dp[n][m];
    char lcs[index] = "";
    int i = n, j = m;
    while(i > 0 && j > 0){
        if(str1[i-1] == str2[j-1]){
            lcs[index-1] = str1[i-1];
            i--;
            j--;
            index--;
        }
        else if (dp[i-1][j] > dp[i][j-1]) 
         i--; 
        else
         j--; 
    }
    cout<<lcs;
   
}

int main() {
	//code
	string str1, str2;
    cin>>str1>>str2;
	    
	LCStabulation(str1,str2);
	return 0;
}
