#include <iostream>
using namespace std;

bool subsetSum(int *arr, int n, int sum){
    bool dp[n+1][sum+1];
    for(int i = 0; i <= sum; i++)
        dp[0][i] = false;
    for(int i = 0; i <= n; i++)
        dp[i][0] = true;
        
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= sum; j++){
            if(arr[i-1] <= j)
                dp[i][j] = dp[i-1][j] + dp[i-1][j - arr[i-1]];
            else
                dp[i][j] = dp[i-1][j];
        }
    }    
    
    return dp[n][sum];
}

int main() {
	//code
	int T;
	cin>>T;
	
	while(T--){
	    int n;
	    cin>>n;
	    
	    int arr[n];
	    for(int i = 0; i < n; i++)
	        cin>> arr[i];
	    int sum = 0;
	    for(int i = 0; i < n; i++)
	        sum += arr[i];
	    bool isSubsetPresent = false;     // for odd sum ,partition into 2 arrays is not possible
	    if(sum%2 == 0) // even sum
	        isSubsetPresent = subsetSum(arr,n,sum/2);
	       
	    if(isSubsetPresent)
	        cout<<"YES";
	    else
	        cout<<"NO";
	    cout<<endl;     
	        
	}
	return 0;
}
