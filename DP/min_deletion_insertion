#include <iostream>
#include <cstring>
using namespace std;


int LCS(string str1, string str2){
    int n = str1.length();
    int m = str2.length();
    
    int dp[n+1][m+1];
    memset(dp,0,sizeof(dp));
    
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            if(str1[i-1] == str2[j-1])
                dp[i][j] = 1 + dp[i-1][j-1];
            else
                dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
        }
    }
    return dp[n][m];
}


int main() {
	//code
	int T;
	cin>>T;
	
	while(T--){
	    int n,m;
	    cin>>n>>m;
	    
	    string str1, str2;
	    cin>>str1>>str2;
	    
	    int lcs = LCS(str1,str2);
	    int count = 0, diff = 0;
	    if(n < m){ // insert into str1
	        diff = m - n;
	        count = diff + (n - lcs)*2;
	    }
	    else{ // delete from str1
	         diff = n - m;
	         count = diff + (n-diff-lcs)*2;
	    }
	    cout<<count<<endl;
	}
	return 0;
}
