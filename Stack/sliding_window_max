class Solution {
public:
    
    vector<int> ngr(vector<int> nums){
        
        int n = nums.size();
        vector<int> arr(n,n);
        stack<int> s;
        s.push(n-1);
        
        for(int i = n-2; i >= 0; i--){
            while(!s.empty() && nums[i] > nums[s.top()])
                s.pop();
            
            if(s.empty())
                arr[i] = n;
            else    
                arr[i] = s.top();
            
            s.push(i);
        }
        return arr;
        
    }
    
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        
        if(nums.size() == 0)
            return nums;
        vector<int> arr, ans;
        
        arr = ngr(nums);
        // for(int i = 0; i < arr.size(); i++)
        //     cout<<arr[i]<<" ";
        // cout<<endl;
        
        int j = 0;
        for(int i = 0; i <= nums.size()-k; i++){
            if(j < i)
                j = i;
            while(arr[j] < i+k){
                j = arr[j];
            }
            
            ans.push_back(nums[j]);
        }
        
        return ans;
        
    }
};
