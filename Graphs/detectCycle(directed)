bool checkCycle(vector<int> g[], int V, vector<int> &visited, vector<int> &inStack){
   
   visited[V] = 1;
   inStack[V] = 1;
   
   for(int i = 0; i < g[V].size(); i++){
        int neighbor = g[V][i];
        if(visited[neighbor] == 0){
            if(checkCycle(g,neighbor,visited,inStack))
                return true;
        }
        if(inStack[neighbor] == 1)
            return true;    
   }
   inStack[V] = 0;
   return false;
}

bool isCyclic(int V, vector<int> g[])
{
    // Your code here
    vector<int> visited(V,0);
    vector<int> inStack(V,0);
   for(int i = 0; i < V; i++){
        if(visited[i] == 0 && checkCycle(g,i,visited,inStack))
            return true;
   }
   
   return false;
}
