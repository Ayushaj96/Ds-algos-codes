#include <bits/stdc++.h>
using namespace std;

// Complexity - O(2^n)
void combinationSum(int *arr, int n, int idx, string ans, int sum, int target, set<string> &s){
    if(sum > target)
        return;
    if(idx == n){    
        if(sum == target){
            if(s.find(ans) != s.end())
                return;
            s.insert(ans);    
            cout<<"("<<ans<<")";
        }
        return;
    }
    
    if(ans.length() == 0){
        combinationSum(arr,n,idx+1,ans + to_string(arr[idx]), sum + arr[idx],target,s);
    }
    else
        combinationSum(arr,n,idx+1,ans + " " +to_string(arr[idx]), sum +arr[idx],target,s);
    
    combinationSum(arr,n,idx+1,ans,sum,target,s);    
}

int main() {
	//code
	int T;
	cin>>T;
	
	while(T--){
	    int n;
	    cin>>n;
	    
	    int arr[n];
	    for(int i = 0; i < n; i++)
	        cin>>arr[i];
	    
	    sort(arr,arr+n);
	    
	    int target;
	    cin>>target;
	    
	    set<string> s;
	    combinationSum(arr,n,0,"",0,target,s);   
	    if(s.empty())
	        cout<<"Empty";
	    cout<<endl;
	}
	return 0;
}
